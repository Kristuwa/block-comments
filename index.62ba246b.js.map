{"mappings":"AAAA,IAAIA,KAAOC,SAASC,cAAc,kBAC9BC,aAAeF,SAASC,cAAc,wBACtCE,cAAgBH,SAASC,cAAc,UAE3CF,KAAKK,iBAAiB,SAAUC,cAChCH,aAAaE,iBAAiB,QAASE,YACvCJ,aAAaE,iBAAiB,QAASG,WACvCJ,cAAcC,iBAAiB,QAASI,aAExC,IAAIC,SAAW,GAEf,SAASJ,aAAaK,GACpBA,EAAEC,iBAEsB,IAAIC,SAASF,EAAEG,eAEvBC,SAAQ,SAACC,EAAOC,GAC9BP,SAASO,GAAQD,KAGnBE,uBAEAC,UAAUT,UAEVV,KAAKoB,QAGP,SAASD,UAAUE,GACjB,OAAOlB,aAAamB,mBAAmB,YAAaC,cAAcF,IAGpE,SAASE,cAAcC,G,IAAEP,EAAFO,EAAEP,KAAMQ,EAARD,EAAQC,QAASC,EAAjBF,EAAiBE,KACtC,MAAO,sEAGsEC,OAF5CV,EAAK,0FAGLU,OAD4CF,EAAQ,iDAC/CE,OAALD,EAAK,sVASxC,SAASnB,WAAWI,GACQ,WAAtBA,EAAEiB,OAAOC,UAGgC,iCAAzClB,EAAEiB,OAAOE,QAAQ,UAAUC,YAC7BpB,EAAEiB,OAAOE,QAAQ,MAAME,MAAMC,QAAU,QAI3C,SAASzB,UAAUG,GACjB,GAA0B,WAAtBA,EAAEiB,OAAOC,UAGgC,gCAAzClB,EAAEiB,OAAOE,QAAQ,UAAUC,UAA6C,CAC1E,IAAIG,EAAUvB,EAAEiB,OAAO1B,cAAc,UAErCgC,EAAQC,UAAUC,OAAO,OAEzB,IAAIC,EAAQC,OAAOJ,EAAQK,aAEvBL,EAAQC,UAAUK,SAAS,OAC7BH,GAAS,EAETA,GAAS,EAEXH,EAAQO,UAAYJ,GAIxB,SAAS5B,YAAYE,GASnB,GARA+B,KAAOJ,OAAO3B,EAAEiB,OAAOZ,MAAM2B,MAAM,KAAK,IACxCC,MAAQN,OAAO3B,EAAEiB,OAAOZ,MAAM2B,MAAM,KAAK,IACzCE,IAAMP,OAAO3B,EAAEiB,OAAOZ,MAAM2B,MAAM,KAAK,IAE1B,IAAIG,KAAKJ,KAAME,MAAQ,EAAGC,KACjBE,UACND,KAAKE,MAKS,OAF5BrC,EAAEiB,OAAOZ,MAAQ,QACjBiC,MAAM,uCAKV,SAAS/B,uBACP,IAAIwB,EAAOJ,OAAO5B,SAASgB,KAAKiB,MAAM,KAAK,IACvCC,EAAQN,OAAO5B,SAASgB,KAAKiB,MAAM,KAAK,IACxCE,EAAMP,OAAO5B,SAASgB,KAAKiB,MAAM,KAAK,IACtCO,EAAU,IAAIJ,KACdK,EAAQD,EAAQE,WAChBC,EAAUH,EAAQI,aAGhBC,EADO,IAAIT,KAAKJ,EAAME,EAAQ,EAAGC,GACjBE,UAElBS,GAAc,MACdC,EACF,MAACN,EACD,IAAAE,EACuB,IAAvBH,EAAQQ,aACRR,EAAQS,kBACRH,EAEII,EAASL,EAAWL,EAAQH,UAE9BI,EAAQ,KACVA,EAAQ,IAAUxB,OAANwB,IAGVE,EAAU,KACZA,EAAU,IAAY1B,OAAR0B,IAGZT,EAAQ,KACVA,EAAQ,IAAUjB,OAANiB,IAGVC,EAAM,KACRA,EAAM,IAAQlB,OAAJkB,IAIVP,OAAQsB,IAAWJ,GAAelB,OAAOsB,GAAU,GACjC,KAAlBlD,SAASgB,KAEThB,SAASgB,KAAO,YAA4BC,OAATwB,EAAM,KAAWxB,OAAR0B,GACnCf,OAAOsB,KAAYH,EAC5B/C,SAASgB,KAAO,UAAmBC,OAATwB,EAAM,KAAWxB,OAAR0B,GAEnC3C,SAASgB,KAAO,GAAUC,OAAPkB,EAAI,KAAYlB,OAATiB,EAAM,KAAYjB,OAATe,EAAK,MAAaf,OAATwB,EAAM,KAAWxB,OAAR0B","sources":["src/js/form.js"],"sourcesContent":["let form = document.querySelector('.callback-form');\nlet listComments = document.querySelector('.section-cases__list');\nlet inputDateForm = document.querySelector('#start');\n\nform.addEventListener('submit', onFormSubmit);\nlistComments.addEventListener('click', onCloseBtn);\nlistComments.addEventListener('click', onLikeBtn);\ninputDateForm.addEventListener('input', onInputDate);\n\nlet formData = {};\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const formDataResults = new FormData(e.currentTarget);\n\n  formDataResults.forEach((value, name) => {\n    formData[name] = value;\n  });\n\n  changeDateForComment();\n\n  addToHTML(formData);\n\n  form.reset();\n}\n\nfunction addToHTML(data) {\n  return listComments.insertAdjacentHTML('beforeend', markupComment(data));\n}\n\nfunction markupComment({ name, comment, date }) {\n  return `<li class=\"section-cases__item\">\n  <p class=\"section-cases__name\">${name}</p>\n \n  <div class=\"section-cases__text-content\"><p class=\"section-cases__comment\">${comment}</p></div>\n  <p class=\"section-cases__date\">${date}</p>\n  <button type=\"button\" class='section-cases__btn-close btn' aria-label=\"close\"></button>\n<button type=\"button\" class='section-cases__btn-like btn' aria-label=\"like\"><span class=\"count\">0</span><span><svg\nwidth=\"32\" height=\"32\" class=\"like-btn\">\n<use href=\"./images/icons.svg#icon-heart\"></use>\n</svg></span></button>\n</li>`;\n}\n\nfunction onCloseBtn(e) {\n  if (e.target.nodeName !== 'BUTTON') {\n    return;\n  }\n  if (e.target.closest('button').className === 'section-cases__btn-close btn') {\n    e.target.closest('li').style.display = 'none';\n  }\n}\n\nfunction onLikeBtn(e) {\n  if (e.target.nodeName !== 'BUTTON') {\n    return;\n  }\n  if (e.target.closest('button').className === 'section-cases__btn-like btn') {\n    let counter = e.target.querySelector('.count');\n\n    counter.classList.toggle('add');\n\n    let count = Number(counter.textContent);\n\n    if (counter.classList.contains('add')) {\n      count += 1;\n    } else {\n      count -= 1;\n    }\n    counter.innerHTML = count;\n  }\n}\n\nfunction onInputDate(e) {\n  year = Number(e.target.value.split('-')[0]);\n  month = Number(e.target.value.split('-')[1]);\n  day = Number(e.target.value.split('-')[2]);\n\n  const date = new Date(year, month - 1, day);\n  const dateInMs = date.getTime();\n  const nowDate = Date.now();\n\n  if (dateInMs > nowDate) {\n    e.target.value = '';\n    alert('Выберете текущую дату, либо ранее!!');\n    return;\n  }\n}\n\nfunction changeDateForComment() {\n  let year = Number(formData.date.split('-')[0]);\n  let month = Number(formData.date.split('-')[1]);\n  let day = Number(formData.date.split('-')[2]);\n  let dateNow = new Date();\n  let hours = dateNow.getHours();\n  let minutes = dateNow.getMinutes();\n\n  const date = new Date(year, month - 1, day);\n  const dateInMs = date.getTime();\n\n  let hours24ToMs = -86400000;\n  let yesterdayTime =\n    -hours * 60 * 60 * 1000 -\n    minutes * 60 * 1000 -\n    dateNow.getSeconds() * 1000 -\n    dateNow.getMilliseconds() +\n    hours24ToMs;\n\n  const result = dateInMs - dateNow.getTime();\n\n  if (hours < 10) {\n    hours = `0${hours}`;\n  }\n\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n\n  if (month < 10) {\n    month = `0${month}`;\n  }\n\n  if (day < 10) {\n    day = `0${day}`;\n  }\n\n  if (\n    (Number(result) >= hours24ToMs && Number(result) < 0) ||\n    formData.date === ''\n  ) {\n    formData.date = `сегодня, ${hours}:${minutes}`;\n  } else if (Number(result) === yesterdayTime) {\n    formData.date = `вчера, ${hours}:${minutes}`;\n  } else {\n    formData.date = `${day}.${month}.${year}, ${hours}:${minutes}`;\n  }\n}\n"],"names":["form","document","querySelector","listComments","inputDateForm","addEventListener","onFormSubmit","onCloseBtn","onLikeBtn","onInputDate","formData","e","preventDefault","FormData","currentTarget","forEach","value","name","changeDateForComment","addToHTML","reset","data","insertAdjacentHTML","markupComment","param","comment","date","concat","target","nodeName","closest","className","style","display","counter","classList","toggle","count","Number","textContent","contains","innerHTML","year","split","month","day","Date","getTime","now","alert","dateNow","hours","getHours","minutes","getMinutes","dateInMs","hours24ToMs","yesterdayTime","getSeconds","getMilliseconds","result"],"version":3,"file":"index.62ba246b.js.map"}